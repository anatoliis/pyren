ВСЕ ЧТО ВЫ ДЕЛАЕТЕ СО СВОИМ АВТОМОБИЛЕМ, ВЫ ДЕЛАЕТЕ НА СВОЙ СТРАХ И РИСК.

ИСПОЛЬЗУЙТЕ ПРОГРАММУ НА ХОДУ ТОЛЬКО С ОСОБОЙ ОСТОРОЖНОСТЬЮ. НЕКОТОРЫЕ БЛОКИ, НАПРИМЕР ABS, МОГУТ РАБОТАТЬ ИНАЧЕ ПРИ ОТКРЫТОЙ ДИАГНОСТИЧЕСКОЙ СЕССИИ С НИМИ.

НЕПРАВИЛЬНОЕ ИСПОЛЬЗОВАНИЕ КОМАНД МОЖЕТ ПРИВЕСТИ К НЕКОРРЕКТНОЙ РАБОТЕ ЭБУ АВТОМОБИЛЯ



 Возможности



- Сканирует и определяет типы ЭБУ на автомобилях Рено
- Считывает и показывает состояния, параметры и идентификации блоков
- Считывает и показывает текстовое описания ошибок ЭБУ, состояние ошибок и относящиеся к этим ошибкам параметры.
- Позволяет сбросить ошибки
- Позволяет выполнить некоторые типы команд
- Код программы открытый. Любой желающий может изменять, исправлять и развивать её, использовать любые отрывки кода по всему усмотрению.
- Работает под OS Windows, Linux, MacOS и Android
- Позволяет сгенерировать диагностическую документацию 



Требования к оборудованию и ПО



- Компьютер с установленным ПО КЛИП (версии ниже 142 не тестировались, на 164 работает) Наличие аппаратной части не обязательно. Запускать и регистрировать ПО КЛИП не нежно.
- Адаптер ELM 327 и его аналоги на базе PIC процессора. (Китайские варианты с ARM ядром работать не будут или в лучшем случае покажут только ЭБУ впрыска)
- Python версии 2.7 с установленным модулем (pyserial)



Недостатки



- низкое качество кода
- поддерживаются не все команды ЭБУ
- не реализованы сценарии
- рассчитана на консоль с фиксированными размерами (90х30)



Установка на Windows



1. На компьютер с установленным ПО КЛИП устанавливаем Python 2.7 https://www.python.org/downloads/. При установке согласитесь с дефолтным месторасположением и с другими дефолтным опциями
2. Запустите CMD.EXE из меню ПУСК. Перейдите в директорию   	> cd c:\Python27\Scripts\ 
3. Разархивируйте архив со скриптом в папку C:\CLIP\Data\GenAppli так, чтобы там образовалась папка pyrenXXX и внутри нее скрипт pyren.py со всеми его модулями  (В дальнейшем для работы скрипта будут необходимы только файлы из директорий EcuRenault, Location и Vehicles. Все пути в скрипте относительные. Директорию GenAppli после копирования в нее скрипта можно переименовать и перенести в другое место или на другой компьютер, включая Linux и MacOS. ) 
4. Попробуйте запустить скрипт без параметров  	c:\CLIP\Data\GenAppli\pyren>pyren.py 
скрипт должен показать свои параметры и список доступных COM портов. При первом запуске на Windows машинах скрипт доставит необходимые ему модули (компьютер должен быть в сети!!!!)


Подключение базы данных DDT2000

скопируйте директории ecus и graphics из DDT2000data туда, где лежат директории EcuRenault, Location и Vehicles



Подключение базы данных MTC и DocDb

Воспользуйтесь утилитой extract.py для извлечения всех необходимых данных с инсталляционного диска КЛИП
Скопируйте директорию BVMEXTRACTION туда где лежат директории EcuRenault, Location и Vehicles.
С инсталляционного диска скопируйте и распакуйте файл DocDb_XX.7ze с документацией на нужном языке.
Получившуюся директорию DocDb_XX скопируйте туда где лежат директории BVMEXTRACTION, EcuRenault, Location и Vehicles


Запуск скрипта на Linux и MacOS



- Директория GenAppli в которую был скопирован скрипт может быть просто скопирована с Windows машины на Linux или MacOS. 
- Python 2.7 должен быть установлен. 
- Установите модули PySerial
	
	>sudo easy_install pyserial


Установка на Android


1. Установите и запустите скрипт на компьютере.
2. На android установите SL4A и Py4A. (Инструкция по установке https://github.com/kuri65536/python-for-android/blob/master/README.md)
3. Скопируйте с компьютера папки (EcuRenault, Location, Vehicles, pyrenXXX) и файл pyren_4a_launcher.py в папку sl4a/scripts на androide.
4. Запустите SL4A и оттуда pyren_4a_launcher.py (в тексте pyren_4a_launcher.py можно редактировать параметры)


Использование



Пример запуска скрипта:

	c:\CLIP\Data\GenAppli\pyren>pyren.py -p COM6

Параметры запуска:
    
-p          (Обязательный параметр). В нем нужно указать COM порт к которому подключен ELM или 192.168.0.10:35000 для WiFi
-s          скорость порта. По умолчанию будет установлена 38400
-r          Временное увеличение скорости порта на время работы скрипта. Используется команда "AT BRD"
-L          язык описаний. По умолчанию устанавливается RU если КЛИП установлен с другим языком то нужно указать например -LGB. Запуск с несуществующим языком, например -LLL, отключит загрузку языковой базы
-vv         показывает подробное описание параметров
-e ECUID    выбор блока или список блоков для demo
--si        всегда пробовать режим SlowInit
--cfc       отключить автоматический FlowControl выполняемый ELM и делать его скриптом
--n1f       отключает ускорение чтения данных с CAN
--log       включает запись лог файлов. В директории Log создается два файла elm_xxxx и ecu_xxxx
--demo      включает режим отладки. В этом режиме программу можно запускать без автомобиля и даже без ELM. Данные конечно никакие показываться не будут но можно будет побродить по менюшкам. ЭБУ при этом, берутся из файла savedEcus.p
--scan      игнорирует наличие файла savedEcus.p и включает сканирование блоков при запуске программы. 
--csv       сохраняет данные считанные с ЭБУ в CSV файл для дальнейшего анализа, например в exel
--csv_only  во время записи csv не показывать данные на экране
--csv_human человеческое описание колонок и значений
--usr_key   добавляет пользовательские события в csv файл при нажатии клавиш
--dev       временное переключение в "1086 : Development Session" при выполнении команд из DevList ['27','2E','30','31','32','34','35','36','37','3B','3D'] 
--dump      при подключении к блоку сохранять его текущие настройки (команды 21* и 22*)
--can2      подключение к мультимедийной CAN (pin 13 и pin 12) (нужен адаптер с переключателем)

После первого сканирования будет создан файл savedEcus.p в котором сохраняться описания всех найденых блоков и при последующем запуске программы, сканирования происходить не будет. Скрипт был написан для личного использования и если вы постоянно будете подключаться к разным машинам, то вам постоянно нужно включать этот ключ или постоянно удалять файл savedEcus.p



Особенности интерфейса


- На Android можно изменить размер шрифта клавишами громкости.
- На некоторых экранах не помещаются все параметры, особенно когда используется ключ -vv в этом случае нужно нажимать на цифры чтобы включить нужную страницу.
- При стирании ошибок и запуске прочих команд нужно ввести слово “yes” чтобы подтвердить выполнение команды


Использование опции dump

ИСПОЛЬЗОВАНИЕ DUMP НЕ ГАРАНТИРУЕТ СОХРАНЕНИЕ И ВОССТАНОВЛЕНИЕ ПОЛНОЙ КОНФИГУРАЦИИ !!!

Использование ключа --dump позволяет сохранить текущую доступную конфигурацию блока при подключении к нему. Сохранение дампа может быть запущено из меню Dumps/Save DUMP модуля mod_ddt. dump-файлы далее могут быть использованы для просмотра конфигурации в demo-режиме и для восстановления старых настроек (возможно не всех).
Конфигурация сохраняется отдельно при подключении к блоку в pyren и в mod_ddt. mod_ddt, как правило, сохраняет более полную конфигурацию.
dump-файлы сохраняются в директории dumps.
Конфигурации сохраненные pyren имеют имя формата <unixTime>_<ecuID>.txt
Конфигурации сохраненные mod_ddt имеют имя формата <unixTime>_<xmlFileName>.txt
При использовании demo-режима, загружается последний из имеющихся файлов с максимальным значением unixTime. mod_ddt, в demo-режиме, позволяет загрузить любой из имеющихся dump-файлов для текущего xml, через меню Dumps.

Откат (Roll Back) конфигурации.

Функция заускается из меню Dumps/RollBack модуля mod_ddt. Выберите конфигурацию к которой нужно вернуться.
Функция определит разницу между выбранной конфигурацие и текущей (считанной из модуля в подключенном режиме или из последнего dump-файла в demo-режие).
На основе выявленной разницы, функция предложит список команд для "отката" к прежней конфигурации и предложит применить эти команды.
Для применения предложенных команд необходимо предварительно переключиться в Экспертный режим.

Предостережение!!!

ИСПОЛЬЗОВАНИЕ DUMP НЕ ГАРАНТИРУЕТ СОХРАНЕНИЕ И ВОССТАНОВЛЕНИЕ ПОЛНОЙ КОНФИГУРАЦИИ !!!

- Перед применением проверьте предложенные команды
- Из-за определнных сложностей, для модулей std_a команды отката могут быть определены неполно или даже неправильно! Тщательно проверьте предложенные команды.
- В процессе восстановления команды будут подаваться с фиксированной задержкой 1 секунда

